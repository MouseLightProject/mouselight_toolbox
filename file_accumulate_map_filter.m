function result = file_accumulate_map_filter(root_folder_path, seed, accumulator, mapper, file_filter, folder_filter)
    % Run an accumulator of a mapper of a filter, feeding them folders/files under
    % root_folder_path
    relative_path = '' ;
    depth = 0 ;
    result = ...
        file_accumulate_map_filter_helper(...
            root_folder_path, ...
            relative_path, ...
            depth, ...
            seed, ...
            accumulator, ...
            mapper, ...
            file_filter, ...
            folder_filter) ;
end



function result = ...
        file_accumulate_map_filter_helper(...
            root_folder_path, ...
            base_folder_relative_path, ...
            depth, ...
            incoming_result, ...
            accumulator, ...
            mapper, ...
            file_filter, ...
            folder_filter)
    result_so_far = incoming_result ;
    base_folder_path = fullfile(root_folder_path, base_folder_relative_path) ;
    [name_from_file_index, is_a_folder_from_file_index] = simple_dir(base_folder_path) ;
    file_count = length(name_from_file_index) ;
    for i = 1 : file_count ,
        file_name = name_from_file_index{i} ;
        is_this_file_a_folder = is_a_folder_from_file_index(i) ;
        if is_this_file_a_folder ,
            is_keeper = feval(folder_filter, root_folder_path, base_folder_relative_path, file_name, depth) ;
        else
            is_keeper = feval(file_filter, root_folder_path, base_folder_relative_path, file_name, depth) ;
        end
        if ~is_keeper ,
            continue
        end
        if is_this_file_a_folder ,
            % recurse
            result_so_far = ...
                file_accumulate_map_filter_helper(...
                    root_folder_path, ...
                    fullfile(base_folder_relative_path, file_name), ...
                    depth+1, ...
                    result_so_far, ...
                    accumulator, ...
                    mapper, ...
                    file_filter, ...
                    folder_filter) ;
        else
            % file is not a folder, passes the filter
            file_value = feval(mapper, root_folder_path, base_folder_relative_path, file_name, depth) ;
            result_so_far = feval(accumulator, result_so_far, file_value) ;
        end
    end    
    % When get here, the result_so_far is the result
    result = result_so_far ;
end
