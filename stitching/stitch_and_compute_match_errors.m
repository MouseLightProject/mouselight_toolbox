function stitch_and_compute_match_errors(raw_tile_root_folder_path, ...
                                         sample_memo_folder_path, ...
                                         analysis_memo_folder_path, ...                                         
                                         landmark_root_folder_path, ...
                                         z_match_root_folder_path, ...
                                         stitching_output_folder_path, ...
                                         options)
    
    % Deal with optional arguments
    if ~exist('options', 'var') || isempty(options) ,
        options = struct() ;
    end
    
%     % Define various paths                                 
%     tile_folder_path = sprintf('/groups/mousebrainmicro/mousebrainmicro/data/%s/Tiling', sample_tag)  %#ok<NOPRT>
%     pipeline_output_folder_path = sprintf('/nrs/mouselight/pipeline_output/%s', sample_tag)    %#ok<NOPRT>
%     if isfield(options, 'sample_memo_folder_path') ,
%         sample_memo_folder_path = options.sample_memo_folder_path 
%     else
%         sample_memo_folder_path = sprintf('/groups/mousebrainmicro/mousebrainmicro/cluster/Reconstructions/%s', sample_tag)  %#ok<NOPRT>
%     end
%     analysis_memo_folder_path = fullfile(sample_memo_folder_path, analysis_tag)  %#ok<NOPRT>
%     stitching_output_folder_path = fullfile(analysis_memo_folder_path, 'stitching-output')  %#ok<NOPRT>
%     %line_fixed_tile_path = fullfile(pipeline_output_folder_path, 'stage_1_line_fix_output')  %#ok<NOPRT>
%     landmark_folder_path = fullfile(pipeline_output_folder_path, 'stage_3_descriptor_output')  %#ok<NOPRT>
%     if ~isfield(options, 'match_folder_path') || isempty(options.match_folder_path) ,
%         match_folder_path = fullfile(pipeline_output_folder_path, 'stage_4_point_match_output') ;
%     else
%         match_folder_path = options.match_folder_path ;
%     end
%     match_folder_path  %#ok<NOPRT>
    
    % Call the function that does the stitching proper
    stitch(raw_tile_root_folder_path, ...
           landmark_root_folder_path, ...
           z_match_root_folder_path, ...
           stitching_output_folder_path, ...
           options) ;

    % Call the function that computes the landmark errors   
    compute_barycentric_landmark_match_errors(raw_tile_root_folder_path, ...
                                              landmark_root_folder_path, ...
                                              z_match_root_folder_path, ...
                                              sample_memo_folder_path, ...
                                              analysis_memo_folder_path, ...
                                              stitching_output_folder_path, ...
                                              options) ;
end
